function c = getFileGUI(c)

    h.fig = figure('name', 'Choisir les fichiers', ...
            'menubar', 'none', ...
            'resize', 'off', ...
            'units', 'normalize', ...
            'position', [.25 .40 .55 .55], ...
            'CloseRequestFcn', [] ... Empêcher de fermer pendant la création
        );
    % Préparer la structure pour ce qui n'est pas des uicontrols directs
    c.staticfile.names = [];
    c.staticfile.path = [];
    h.userFig = figure('visible', 'off', ...
            'userdata', c);

    set(h.fig, 'units', 'pixels');
    pos = get(h.fig, 'position');
    font_15 = 14.5/400 * pos(4); %420 est la grandeur quand 15 a été testé
    font_12 = 12/400 * pos(4);
    set(h.fig, 'units', 'normalize');
    
    % Nom du sujet
    uicontrol(  'parent', h.fig, ...
                'style', 'text', ...
                'units', 'normalize', ...
                'position', [-0.01 .89 .3 .07], ...
                'string', 'Nom du sujet : ', ...
                'fontsize', font_15, ...
                'HorizontalAlignment', 'right' ...
             )
    h.nom = uicontrol(  'parent', h.fig, ...
                'style', 'edit', ...
                'units', 'normalize', ...
                'position', [.3 .9 .62 .07], ...
                'fontsize', font_12, ...
                'HorizontalAlignment', 'left' ...
             );
    
    % Taille du sujet
    uicontrol(  'parent', h.fig, ...
                'style', 'text', ...
                'units', 'normalize', ...
                'position', [-0.01 .79 .3 .07], ...
                'string', 'Taille du sujet : ', ...
                'fontsize', font_15, ...
                'HorizontalAlignment', 'right' ...
             );
    h.taille = uicontrol(  'parent', h.fig, ...
                'style', 'edit', ...
                'units', 'normalize', ...
                'position', [.3 .8 .12 .07], ...
                'fontsize', font_12 ...
            );
    uicontrol(  'parent', h.fig, ...
                'style', 'text', ...
                'units', 'normalize', ...
                'position', [.43 .79 .08 .07], ...
                'string', 'cm', ...
                'HorizontalAlignment', 'left', ...
                'fontsize', font_15 ...
             )
         
     % Masse du sujet
    uicontrol(  'parent', h.fig, ...
                'style', 'text', ...
                'units', 'normalize', ...
                'position', [-0.01 .69 .3 .07], ...
                'string', 'Masse du sujet : ', ...
                'fontsize', font_15, ...
                'HorizontalAlignment', 'right' ...
             );
    h.masse = uicontrol(  'parent', h.fig, ...
                'style', 'edit', ...
                'units', 'normalize', ...
                'position', [.30 .7 .12 .07], ...
                'fontsize', font_12 ...
            );
    uicontrol(  'parent', h.fig, ...
                'style', 'text', ...
                'units', 'normalize', ...
                'position', [.43 .69 .08 .07], ...
                'string', 'kg', ...
                'HorizontalAlignment', 'left', ...
                'fontsize', font_15 ...
             )
         
     % Age du sujet
    uicontrol(  'parent', h.fig, ...
                'style', 'text', ...
                'units', 'normalize', ...
                'position', [-0.01 .59 .3 .07], ...
                'string', 'Âge du sujet : ', ...
                'fontsize', font_15, ...
                'HorizontalAlignment', 'right' ...
             );
    h.age = uicontrol(  'parent', h.fig, ...
                'style', 'edit', ...
                'units', 'normalize', ...
                'position', [.3 .6 .12 .07], ...
                'fontsize', font_12 ...
            );
    uicontrol(  'parent', h.fig, ...
                'style', 'text', ...
                'units', 'normalize', ...
                'position', [.43 .59 .12 .07], ...
                'string', 'années', ...
                'HorizontalAlignment', 'left', ...
                'fontsize', font_15 ...
             )
         
    % Choix du genre
    bgsexe = uibuttongroup('parent', h.fig, ...
                'Visible','on',...
                'units', 'normalize', ...
                'Position',[.54 .65 .15 .19]);
    uicontrol(bgsexe,'Style','radiobutton',...
                'String','Garçon',...
                'fontsize', font_12, ...
                'units', 'normalize', ...
                'Position',[.12 .60 1 .25],...
                'HandleVisibility','on');
        % Si get(h.sexe, 'value') = 1, c'est une fille, sinon garcon
     h.sexe = uicontrol(bgsexe,'Style','radiobutton',...
                'String','Fille',...
                'fontsize', font_12, ...
                'units', 'normalize', ...
                'Position',[.12 0.15 1 .25],...
                'HandleVisibility','on');
         
         
    bg_aide = uibuttongroup('parent', h.fig, ...
                'Visible','on',...
                'units', 'normalize', ...
                'Position',[.72 .62 .20 .25]);
    h.aide(1) = uicontrol(bg_aide,'Style','radiobutton',...
                'String','Aucune (0)',...
                'fontsize', font_12, ...
                'units', 'normalize', ...
                'Position',[.05 .75 1 .25],...
                'HandleVisibility','on');
    h.aide(2) = uicontrol(bg_aide,'Style','radiobutton',...
                'String','Orthèse (1)',...
                'fontsize', font_12, ...
                'units', 'normalize', ...
                'Position',[.05 .5 1 .25],...
                'HandleVisibility','on');
    h.aide(3) =  uicontrol(bg_aide,'Style','radiobutton',...
                'String','Canne (2)',...
                'fontsize', font_12, ...
                'units', 'normalize', ...
                'Position',[.05 0.25 1 .25],...
                'HandleVisibility','on');
    h.aide(4) =  uicontrol(bg_aide,'Style','radiobutton',...
                'String','Marchette (3)',...
                'fontsize', font_12, ...
                'units', 'normalize', ...
                'Position',[.05 0.01 1 .25],...
                'HandleVisibility','on');
  
    % Note sur le sujet
    uicontrol(  'parent', h.fig, ...
                'style', 'text', ...
                'units', 'normalize', ...
                'position', [-0.01 .49 .3 .07], ...
                'string', 'Notes : ', ...
                'fontsize', font_15, ...
                'HorizontalAlignment', 'right' ...
             );
    h.note = uicontrol(  'parent', h.fig, ...
                'style', 'edit', ...
                'units', 'normalize', ...
                'position', [.3 .5 .62 .07], ...
                'fontsize', font_12, ...
                'HorizontalAlignment', 'left' ...
            );
        
    % EEI info
    uicontrol(  'parent', h.fig, ...
                'style', 'text', ...
                'units', 'normalize', ...
                'position', [-0.01 .39 .3 .07], ...
                'string', 'Fréquence repos : ', ...
                'fontsize', font_15, ...
                'HorizontalAlignment', 'right' ...
             );
    h.fc_repos = uicontrol(  'parent', h.fig, ...
                'style', 'edit', ...
                'units', 'normalize', ...
                'position', [.3 .4 .12 .07], ...
                'fontsize', font_12, ...
                'HorizontalAlignment', 'left' ...
            );
    uicontrol(  'parent', h.fig, ...
                'style', 'text', ...
                'units', 'normalize', ...
                'position', [-0.01 .29 .3 .07], ...
                'string', 'Vitesse marche : ', ...
                'fontsize', font_15, ...
                'HorizontalAlignment', 'right' ...
             );
    h.v_marche = uicontrol(  'parent', h.fig, ...
                'style', 'edit', ...
                'units', 'normalize', ...
                'position', [.3 .3 .12 .07], ...
                'fontsize', font_12, ...
                'HorizontalAlignment', 'left' ...
            );
    uicontrol(  'parent', h.fig, ...
                'style', 'text', ...
                'units', 'normalize', ...
                'position', [0.42 .39 .3 .07], ...
                'string', 'Fréquence marche : ', ...
                'fontsize', font_15, ...
                'HorizontalAlignment', 'right' ...
             );
    h.fc_marche = uicontrol(  'parent', h.fig, ...
                'style', 'edit', ...
                'units', 'normalize', ...
                'position', [.73 .4 .12 .07], ...
                'fontsize', font_12, ...
                'HorizontalAlignment', 'left' ...
            );
    h.all_cycles = uicontrol(  'parent', h.fig, ...
                'style', 'checkbox', ...
                'units', 'normalize', ...
                'position', [.5 .29 .3 .07], ...
                'string', 'Tous les cycles : ', ...
                'fontsize', font_15, ...
                'HorizontalAlignment', 'right', ...
                'value', 1 ...
             );
    
    % Bouton pour sélectionner les fichiers
    h.files = uicontrol(  'parent', h.fig, ...
                'style', 'pushbutton', ...
                'units', 'normalize', ...
                'position', [.07 .16 .4 .08], ...
                'string', 'Fichiers à analyser', ...
                'fontsize', font_15 ...
                );
            
    % Bouton pour sélectionner le fichier statique
    h.statFile = uicontrol(  'parent', h.fig, ...
                'style', 'pushbutton', ...
                'units', 'normalize', ...
                'position', [.53 .16 .4 .08], ...
                'string', 'Fichier statique', ...
                'fontsize', font_15 ...
                );
            
            
    % Bouton pour lancer l'analyse et enregistrer dans excel
    h.export = uicontrol(  'parent', h.fig, ...
                'style', 'pushbutton', ...
                'units', 'normalize', ...
                'position', [.3 .06 .4 .08], ...
                'string', 'Exporter', ...
                'fontsize', font_15, ...
                'enable', 'off' ...
                );
            
    set(h.nom, 'callback', {@checkForReady, h})
    set(h.taille, 'callback', {@checkForReady, h})
    set(h.masse, 'callback', {@checkForReady, h})
    set(h.age, 'callback', {@checkForReady, h})
    set(h.files, 'callback', {@filesToAnalyse, h})
    set(h.statFile, 'callback', {@fileStatiqueToAnalyse, h})
    set(h.export, 'callback', {@exportFile, h})
    set(h.fig, 'CloseRequestFcn', {@cancel,h})
    set(h.fc_repos, 'callback', {@checkForReady, h})
    set(h.fc_marche, 'callback', {@checkForReady, h})
    set(h.v_marche, 'callback', {@checkForReady, h})
    set(h.all_cycles, 'callback', {@checkForReady, h})
        
    uiwait(h.fig);
    c = get(h.userFig, 'userdata');
    delete(h.userFig)
end

function filesToAnalyse(~,~,h)
    c = get(h.userFig, 'userdata');
  
    % Choisir les fichiers
    [c.file.names, c.file.path] = uigetfile('data/*.c3d','MultiSelect','on');

    % Si un seul fichier, il faut le mettre en cellule
    if ischar(c.file.names)
        c.file.names = {c.file.names};
    end
    
    set(h.userFig, 'userdata', c);
    
    % Permettre Exporter
    checkForReady([],[],h);
end

function fileStatiqueToAnalyse(~,~,h)
    c = get(h.userFig, 'userdata');
  
    % Choisir les fichiers
    [staticfilename, c.staticfile.path] = uigetfile('data/*.c3d');
    c.staticfile.names = {staticfilename};

    set(h.userFig, 'userdata', c);
    
    % Permettre Exporter
    checkForReady([],[],h);
end

function out = checkForNumericValue(h, errorMsg)
    val = get(h, 'string');
    val = strrep(val, ',', '.'); % Changer les , pour des .
    set(h, 'string', num2str(val));
    if ~isempty(val) && (isnan(str2double(val)) || str2double(val) < 0)
        set(h, 'string', '');
        uiwait(errordlg(errorMsg))
        out = false;
        return;
    end
    out = true;
end

function checkForReady(~,~,h)
    c = get(h.userFig, 'userdata');
    set(h.export, 'enable', 'off');
        
    % S'assurer que la taille est correctement entrée
    if ~checkForNumericValue(h.taille, 'Mettre uniquement des valeurs numériques positive pour la taille')
        return;
    end
    
    % S'assurer que la masse est correctement entrée
    if ~checkForNumericValue(h.masse, 'Mettre uniquement des valeurs numériques positive pour la masse')
        return;
    end
    
    % S'assurer que la age est correctement entrée
    if ~checkForNumericValue(h.age, 'Mettre uniquement des valeurs numériques positive pour l''âge')
        return;
    end
    
    % S'assurer que les eei sont correctement entrées
    if ~checkForNumericValue(h.fc_repos, 'Mettre uniquement des valeurs numériques positive pour la fréquence de repos')
        return;
    end
    if ~checkForNumericValue(h.fc_marche, 'Mettre uniquement des valeurs numériques positive pour la fréquence de marche')
        return;
    end
    if ~checkForNumericValue(h.v_marche, 'Mettre uniquement des valeurs numériques positive pour la vitesse de marche')
        return;
    end
    
    
    
    % Si un des fichiers n'est pas choisi
    % ou que les infos ne sont pas entrés 
    if ~isfield(c, 'file') || ...
        ~isfield(c.file, 'names') || ...
        isempty(c.file.names) || ...  
        ... isempty(c.staticfile.names) || ... Les fichier statiques ne sont pas nécessaires
        isempty(get(h.nom, 'string')) || ...
        isempty(get(h.taille, 'string')) || ...
        isempty(get(h.masse, 'string')) || ...
        isempty(get(h.age, 'string')) 
        return;
    end
    
    
    set(h.export, 'enable', 'on');
    
end

function exportFile(~,~, h)
    c = get(h.userFig, 'userdata');
    % Copier quelques infos
    c.info.name = get(h.nom, 'string'); 
    c.info.height = str2double(get(h.taille, 'string')) * 10; % Transformer en mm
    c.info.mass = str2double(get(h.masse, 'string'));
    c.info.age = str2double(get(h.age, 'string'));
    c.info.sexe = get(h.sexe, 'value');
    c.eei.fc_repos = str2double(get(h.fc_repos, 'string'));
    c.eei.fc_marche = str2double(get(h.fc_marche, 'string'));
    c.eei.v_marche = str2double(get(h.v_marche, 'string'));
    
    for i=1:length(h.aide)
        if get(h.aide(i), 'value')
            c.info.aide = i-1;
            c.info.aideStr = get(h.aide(i), 'string');
            break
        end
    end
    c.info.note = get(h.note, 'string');
    
    % Demander le fichier à enregistrer
    if ~exist('result', 'dir')
        mkdir('result')
    end
    [savefile, savepath] = uiputfile('result/*.csv');
    c.file.savepath = [savepath savefile];
    
    c.selectAllCycle = get(h.all_cycles, 'value');
    
    set(h.userFig, 'userdata', c);
    delete(h.fig);
end

function cancel(~,~,h)
    c = [];
    set(h.userFig, 'userdata', c);
    delete(h.fig);
end

